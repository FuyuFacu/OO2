@startuml

interface IWeather {
    +getTemperaturaFahrenheit(): double
    +getPresion(): double
    +getRadiacionSolar(): double
    +getTemperaturasFahrenheit(): List<Double>
    +display(): String
}

class HomeWeatherStation {
    -temperaturasFahrenheit: List<Double>
    +getTemperaturaFahrenheit(): double
    +getPresion(): double
    +getRadiacionSolar(): double
    +getTemperaturasFahrenheit(): List<Double>
}

class HomeWeatherStationWrapper implements IWeather {
    +getTemperaturaFahrenheit(): double
    +getPresion(): double
    +getRadiacionSolar(): double
    +getTemperaturasFahrenheit(): List<Double>
    +display(): String
}

HomeWeatherStationWrapper --> HomeWeatherStation: contiene


' Decorator base


abstract class WeatherDecorator implements IWeather{
    +Weather(component: IWeather)
    +getTemperaturaFahrenheit(): double
    +getPresion(): double
    +getRadiacionSolar(): double
    +getTemperaturasFahrenheit(): List<Double>
    +convertirFarenACelcius(F: double): double
    +display(): String
}

WeatherDecorator --> IWeather: component


' Decoradores concretos


class WeatherPresion extends WeatherDecorator {
    +display(): String
}

class WeatherRadiacionSolar extends WeatherDecorator {
    +display(): String
}

class WeatherPromedioTemperaturas extends WeatherDecorator {
    +display(): String
}

class WeatherTemperaturaCelsius extends WeatherDecorator {
    +display(): String
}


@enduml
