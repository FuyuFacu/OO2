@startuml
interface IEstado { 
 +completar(tarea: ITarea) 
 +empezar(tarea: ITarea) 

}

abstract class Tarea { 
 -nombre: String;
 -descripcion: String;
 -duracionEstimada: int;
 -comienzo: long;
 +setEstado(estado: IEstado) 
 +<<abstract>> duracionEstimada(): int 
 +<<abstract>> tiempoUtilizadoTarea(): double 
 +<<abstract>> avanceTarea(): double 
 +<<abstract>> iniciarTarea() 
 +<<abstract>> completarTarea() 
 
}

class EstadoNoEmpezado implements IEstado{ 
 +completar(tarea: ITarea) 
 +empezar(tarea: ITarea) 
}

class EstadoEmpezado implements IEstado { 
 +completar(tarea: ITarea) 
 +empezar(tarea: ITarea) 
}

class EstadoFinalizado implements IEstado { 
 +completar(tarea: ITarea) 
 +empezar(tarea: ITarea) 
}

class TareaSimple extends Tarea { 
 +<<constructor>> TareaSimple(...): void
 +duracionEstimada(): int 
 +tiempoUtilizadoTarea(): double 
 +avanceTarea(): double 
 +iniciarTarea() +completarTarea() 
 +setEstado(estado: IEstado) 
}

class TareaCompleja extends Tarea { 
 +<<constructor>> TareaCompleja(...): void
 +duracionEstimada(): int 
 +tiempoUtilizadoTarea(): double 
 +avanceTarea(): double 
 +iniciarTarea() 
 +completarTarea() 
 +setEstado(estado: IEstado) 
}


Tarea -left-> "1" IEstado: contiene
TareaCompleja --> "0..1" Tarea


@enduml
